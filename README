les
===

This is a program similar to less. It is written in C using the
terminfo and iconv libraries.

Unicode
=======

The main reason you would need ot handle unicode in a program like
this is to get the right number of characters on a line. This
requires the program to know what characters it has in its buffer.
It can't just spit back whatever was given to it. This program will
assume the input file was utf-8. if it isn't then you can give the
correct encoding with the -e (encoding) option.

Even more than knowing the amount of characters is knowing the width
of the characters, since unicode characters can be double wide or
zero width. libc includes wcwidth() and wcswidth() to do the job,
but it requires you convert your string into a wchar_t string.
I prefer to maintain text internally as a byte string of utf-8
characters, so I maintain a table of character widths in the source
of the program.

Highlights
==========

This will highlight all on a page in blue. The one you are up to
in green. vim and less only search for things in the screen you are
on for performance reasons. This program will find all matches in
the buffer so I can show the number of matches in the status line.
It'll be a little bit slower. But it let's me do the search one
time instead of every time you go down a line.

Improvements Over less
======================

Word wrap will keep words together. less breaks words at the end of a line even if they could fit on the next line.

Sometimes when less is word wrapped you have to press j multiple times to go down one wrapped line.

While less is loading the first page, you can not enter keyboard commands.

Tabs.

Todo
====

8 character tabs (use the it terminfo parameter)
windows line endings
/searching
mousewheel scroll
correct screen width when input has ansi color codes
show status line percent through file as a colored portion of a bar
winch signal
next/prev function (C like or Perl like), highlight it too someway
next/prev if/for/while
left/right scrolling
help text in a browsable tab
file browser
get the line number right for short files (possibly does it end in a new line or not?)
program crashes when given a directory name

