les
===

This is a program similar to less. It is written in C using the
terminfo, and iconv libraries.

Unicode
=======

The main reason you would need ot handle unicode in a program like
this is to get the right number of characters on a line. This
requires the program to know what characters it has in it's buffer.
It can't just spit back whatever was given to it. This program will
assume the input file was utf-8. if it isn't then you can give the
correct encoding with the -e (encoding) option.

Even more than knowing the amount of characters is knowing the width
of the characters, since unicode characters can be double wide or
zero width. libc includes wcwidth() and wcswidth() to do the job,
but it requires you convert your string into a wchar_t string. vim,
less, and glib opt not to do this, and they maintain the table of
character widths themselves.

I'm not using the locale's environment variables for finding a good
default encoding since nl_langinfo(CODESET) might not be supported
on all OSes and I don't want to parse the LANG, LC_ALL, or LC_CTYPE
variables.

Highlights
==========

This will highlight all on a page in blue. The one you are up to
in green. vim and less only search for things in the screen you are
on for performance reasons. This program will find all matches in
the buffer so I can show the number of matches in the status line.
It'll be a little bit slower. But it let's me do the search one
time instead of every time you go down a line.

Todo
====

word wrap
windows line endings
tab line color should span entire row
/searching

