les
===

This is a pager program similar to less and more. It is written in
C using the terminfo, iconv, and pcre2 libraries.

Unicode
=======

The reason this program needs to handle Unicode is to get the right
number of characters on a line. This requires the program to know
the number of bytes in each character, and the screen width of the
character (characters in Unicode can take 0, 1, or 2 widths).  This
program will assume the input file was UTF-8. if it isn't, then you
can give the correct encoding with the -e (encoding) option.

Highlights
==========

When you search, this will highlight all matches on a page in blue.
The one you are up to in green. vim and less only search for things
in the screen you are on for performance reasons. This program will
find all matches in the buffer so I can show the number of matches
in the status line.  It'll be a little bit slower. But it let's me
do the search one time instead of every time you go down a line.

Man Pages and git diff
======================

You can set your man page output to be piped through les by adding
the following to your .bashrc:

export PAGER=les

You can set les to be your git diff viewer by adding the following
to your .gitconfig:

[core]
    pager = les

Improvements Over less
======================

les shows your progress through a file with a colored bar in the status line.

les shows the list of opened files in a tabbed list at the top of the screen.

les allows keyboard commands while loading the file.

les will close the program when Ctrl-C is pressed.

In less, lines are wrapped in the middle of a word.

In less, you sometimes have to press j multiple times to go down
one wrapped line.

In less, if the line is wrapped and you move right, word wrap is
turned off and you move right, which shuffles the screen and looks
confusing.

In less, left and right movement are bound to the arrow keys when
they should be bound to h and l.

In less, there are a lot of useless command line options and key
binds that no one will use ever. For example (-a, -A, -b, -B, -c,
-C, -d, -D, -e, -E, -f, -g, -G)

Todo
====

/searching
next/prev function (C like or Perl like), highlight it too someway
next/prev if/for/while
J,K go to next/prev paragraph (maybe centering and highlighting it)
mousewheel scroll
port to linux
create a man page
gpl it
?searching
tail -f
Ctrl-U on long files causes crash
escape in prompt needs to exit the prompt

